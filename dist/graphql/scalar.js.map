{"version":3,"sources":["../../src/graphql/scalar.js"],"names":["resolverScalar","Date","name","description","parseValue","value","serialize","parseLiteral","ast","format"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;AACA,IAAMA,iBAAiB;AACtBC,OAAM,+BAAsB;AAC3BC,QAAM,MADqB;AAE3BC,eAAa,yBAFc;AAG3BC,YAH2B,sBAGhBC,KAHgB,EAGT;AACjB,UAAO,sBAAOA,KAAP,CAAP,CADiB,CACK;AACtB,GAL0B;AAM3BC,WAN2B,qBAMjBD,KANiB,EAMV;AAChB,UAAO,sBAAOA,KAAP,CAAP,CADgB,CACM;AACtB,GAR0B;AAS3BE,cAT2B,wBASdC,GATc,EAST;AACjB,UAAO,sBAAOA,GAAP,EAAYC,MAAZ,EAAP;AACA;AAX0B,EAAtB;AADgB,CAAvB;kBAeeT,c","file":"scalar.js","sourcesContent":["import moment from 'moment';\nimport { GraphQLScalarType } from 'graphql';\n//import { Kind } from 'graphql/language';\nconst resolverScalar = {\n\tDate: new GraphQLScalarType({\n\t\tname: 'Date',\n\t\tdescription: 'Date custom scalar type',\n\t\tparseValue(value) {\n\t\t\treturn moment(value); // value from the client\n\t\t},\n\t\tserialize(value) {\n\t\t\treturn moment(value); // value sent to the client\n\t\t},\n\t\tparseLiteral(ast) {\n\t\t\treturn moment(ast).format();\n\t\t}\n\t}),\n};\nexport default resolverScalar;"]}