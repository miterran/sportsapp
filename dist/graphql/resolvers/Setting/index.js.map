{"version":3,"sources":["../../../../src/graphql/resolvers/Setting/index.js"],"names":["passcodeSchema","object","shape","newPasscode","string","matches","min","max","required","Mutation","changePassword","root","ctx","password","newPassword","confirmNewPassword","user","_id","title","content","status","length","findOneAndUpdate","Types","ObjectId","$set","create","username","changePasscode","confirmNewPasscode","isValid","isNewPasscodeValid","validate","catch","err","message","passcode","changeEmail","email","role"],"mappings":"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","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\nimport yup from 'yup';\nimport User from '../../../models/User';\nimport Agent from '../../../models/User.Agent';\nimport SystemLog from '../../../models/SystemLog';\n\nconst passcodeSchema = yup.object().shape({\n\tnewPasscode: yup.string().matches(/^[0-9]+$/, 'New Passcode format is invalid.').min(4).max(4).required()\n});\n\nexport const Mutation = {\n\tasync changePassword(root, { password, newPassword, confirmNewPassword }, ctx){\n\t\tif(ctx.user._id === '') return { title: 'Not Authenticated', content: 'Please try again.', status: 'warning' };\n\t\tif(newPassword.length < 4 || confirmNewPassword.length < 4) return { title: 'New Password Invalid', content: 'requires 4 characters', status: 'warning' };\n\t\tif(newPassword !== confirmNewPassword) return { title: 'New Password Not Match', content: 'Please try again.', status: 'warning' };\n\t\tconst user = await User.findOneAndUpdate({ _id: mongoose.Types.ObjectId(ctx.user._id), password: password }, { $set: { password: newPassword } });\n\t\tif(!user) return { title: 'Current Password Incorrect', content: 'Please try again.', status: 'warning' };\n\t\tawait SystemLog.create({ title: 'User Changed Password', content: `${user.username} Changed Password`, status: 'success' });\n\t\treturn { title: 'Completed', content: 'Your Password has been changed!', status: 'success' };\n\t},\n\tasync changePasscode(root, { password, newPasscode, confirmNewPasscode }, ctx){\n\t\tif(ctx.user._id === '') return { title: 'Not Authenticated', content: 'Please try again.', status: 'warning' };\n\t\tif(newPasscode !== confirmNewPasscode) return { title: 'New Passcode Not Match', content: 'Please try again.', status: 'warning' };\n\t\tconst isNewPasscodeValid = await passcodeSchema.isValid({newPasscode: newPasscode});\n\t\tif(!isNewPasscodeValid) return { title: 'New Passcode Invalid', content: await passcodeSchema.validate({newPasscode: newPasscode}).catch(err => err.message), status: 'warning' };\n\t\tconst user = await User.findOneAndUpdate({ _id: mongoose.Types.ObjectId(ctx.user._id), password: password }, { $set: { passcode: newPasscode } });\n\t\tif(!user) return { title: 'Password Incorrect', content: 'Please try again.', status: 'warning' };\n\t\tawait SystemLog.create({ title: 'User Changed Passcode', content: `${user.username} Changed Passcode`, status: 'success' });\n\t\treturn { title: 'Completed', content: 'Your Passcode has been changed!', status: 'success' };\n\t},\n\n\tasync changeEmail(root, { passcode, email }, ctx){\n\t\tif(ctx.user.role === 'Guest') return { title: 'Not Authenticated', content: 'Please try again.', status: 'warning' };\n\t\tconst user = await User.findOneAndUpdate({ _id: mongoose.Types.ObjectId(ctx.user._id), passcode: passcode }, { $set: { email: email } });\n\t\tif(!user) return { title: 'Warning', content: 'Passcode Incorrect.', status: 'warning' };\n\t\tawait SystemLog.create({ title: 'Agent Changed Email', content: `${ctx.user.username} Changed Email`, status: 'success' });\n\t\treturn { title: 'Completed', content: 'New Email: ' + email, status: 'success' };\n\t}\n\n};\n"]}