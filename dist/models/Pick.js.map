{"version":3,"sources":["../../src/models/Pick.js"],"names":["Schema","PickSchema","ID","type","String","required","Player","Types","ObjectId","ref","Agent","BetOrder","Event","marked","oddLine","Number","oddPoint","oddTarget","enum","oddType","oddLineTarget","oddPointTarget","isClosed","Boolean","status","default","note","updatedAt","Date","now","createdAt","PickClass","loadClass","Pick","model"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AACA,IAAMA,SAAS,mBAASA,MAAxB;;AAEA,IAAMC,aAAa,IAAID,MAAJ,CAAW;AAC7BE,KAAI,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADyB,EACS;AACtCC,SAAQ,EAAEH,MAAMH,OAAOO,KAAP,CAAaC,QAArB,EAA+BC,KAAK,MAApC,EAA4CJ,UAAU,IAAtD,EAFqB;AAG7BK,QAAO,EAAEP,MAAMH,OAAOO,KAAP,CAAaC,QAArB,EAA+BC,KAAK,MAApC,EAHsB;AAI7BE,WAAU,EAAER,MAAMH,OAAOO,KAAP,CAAaC,QAArB,EAA+BC,KAAK,UAApC,EAAgDJ,UAAU,IAA1D,EAJmB;AAK7BO,QAAO,EAAET,MAAMH,OAAOO,KAAP,CAAaC,QAArB,EAA+BC,KAAK,OAApC,EAA6CJ,UAAU,IAAvD,EALsB;AAM7BQ,SAAQ;AACPC,WAAS,EAAEX,MAAMY,MAAR,EADF;AAEPC,YAAU,EAAEb,MAAMY,MAAR,EAFH;AAGPE,aAAW,EAAEd,MAAMC,MAAR,EAAgBc,MAAM,CAAE,MAAF,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,IAAnC,CAAtB,EAHJ;AAIPC,WAAS,EAAEhB,MAAMC,MAAR,EAAgBc,MAAM,CAAE,OAAF,EAAW,QAAX,EAAqB,OAArB,EAA8B,MAA9B,CAAtB,EAJF;AAKPE,iBAAe,EAAEjB,MAAMC,MAAR,EAAgBc,MAAM,CAAE,eAAF,EAAmB,eAAnB,EAAoC,gBAApC,EAAsD,gBAAtD,EAAwE,eAAxE,EAAyF,gBAAzF,EAA2G,UAA3G,EAAuH,IAAvH,CAAtB,EALR;AAMPG,kBAAgB,EAAElB,MAAMC,MAAR,EAAgBc,MAAM,CAAE,iBAAF,EAAqB,iBAArB,EAAwC,gBAAxC,EAA0D,iBAA1D,EAA6E,IAA7E,CAAtB;AANT,EANqB;AAc7BI,WAAU,EAAEnB,MAAMoB,OAAR,EAAiBlB,UAAU,IAA3B,EAdmB;AAe7BmB,SAAQ,EAAErB,MAAMC,MAAR,EAAgBc,MAAM,CAAE,SAAF,EAAa,KAAb,EAAoB,UAApB,EAAgC,MAAhC,EAAwC,WAAxC,EAAqD,MAArD,EAA6D,QAA7D,EAAuE,WAAvE,EAAoF,WAApF,EAAiG,QAAjG,CAAtB,EAAmIO,SAAS,SAA5I,EAfqB;AAgB7BC,qBAhB6B;AAiB7BC,YAAW,EAAExB,MAAMyB,IAAR,EAAcH,SAASG,KAAKC,GAA5B,EAjBkB;AAkB7BC,YAAW,EAAE3B,MAAMyB,IAAR,EAAcH,SAASG,KAAKC,GAA5B;AAlBkB,CAAX,CAAnB;;IAqBME,S;;;;;;;sBACW;AAAE,OAAG,KAAKT,QAAR,EAAkB,OAAO,KAAKK,SAAZ,CAAuB,OAAO,IAAP;AAAc;;;;;;AAG1E1B,WAAW+B,SAAX,CAAqBD,SAArB;;AAEA,IAAME,OAAQ,mBAASC,KAAT,CAAe,MAAf,EAAuBjC,UAAvB,CAAd;;kBAEegC,I","file":"Pick.js","sourcesContent":["import mongoose from 'mongoose';\nimport Note from './Note';\nconst Schema = mongoose.Schema;\n\nconst PickSchema = new Schema({\n\tID: { type: String, required: true }, // singlePickID\n\tPlayer: { type: Schema.Types.ObjectId, ref: 'User', required: true },\n\tAgent: { type: Schema.Types.ObjectId, ref: 'User' },\n\tBetOrder: { type: Schema.Types.ObjectId, ref: 'BetOrder', required: true },\n\tEvent: { type: Schema.Types.ObjectId, ref: 'Event', required: true },\n\tmarked: {\n\t\toddLine: { type: Number },\n\t\toddPoint: { type: Number },\n\t\toddTarget: { type: String, enum: [ 'Home', 'Away', 'Over', 'Under', null ] },\n\t\toddType: { type: String, enum: [ 'MLine', 'Spread', 'Total', 'Draw' ] },\n\t\toddLineTarget: { type: String, enum: [ 'awayMoneyLine', 'homeMoneyLine', 'awaySpreadLine', 'homeSpreadLine', 'totalOverLine', 'totalUnderLine', 'drawLine', null ] },\n\t\toddPointTarget: { type: String, enum: [ 'awaySpreadPoint', 'homeSpreadPoint', 'totalOverPoint', 'totalUnderPoint', null ] },\n\t},\n\tisClosed: { type: Boolean, required: true },\n\tstatus: { type: String, enum: [ 'Pending', 'Won', 'Won Half', 'Lost', 'Lost Half', 'Push', 'Closed', 'Cancelled', 'Postponed', 'Review' ], default: 'Pending' },\n\tnote: Note,\n\tupdatedAt: { type: Date, default: Date.now },\n\tcreatedAt: { type: Date, default: Date.now }\n});\n\nclass PickClass {\n\tget closedAt () { if(this.isClosed) return this.updatedAt; return null; }\n}\n\nPickSchema.loadClass(PickClass);\n\nconst Pick  = mongoose.model('Pick', PickSchema);\n\nexport default Pick;"]}