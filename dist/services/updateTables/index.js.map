{"version":3,"sources":["../../../src/services/updateTables/index.js"],"names":["generateTableSports","actionEvents","sports","isEmpty","event","some","name","sport","push","leagues","sportIndex","findIndex","league","region","periods","leagueIndex","period","generateActionEvents","action","events","compact","map","isActionOddActivate","pick","updateTable","console","log","find","cutOffAt","$gte","standardEvents","modifyEvents","specialEvents","findOneAndUpdate","$set","Error","__dirname"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,sBAAsB,SAAtBA,mBAAsB,CAACC,YAAD,EAAkB;AAC7C,KAAIC,SAAS,EAAb;AACA,KAAG,iBAAEC,OAAF,CAAUF,YAAV,CAAH,EAA4B,OAAO,EAAP;;AAFiB,4BAGnCG,KAHmC;AAI5C,MAAG,CAAC,iBAAEC,IAAF,CAAOH,MAAP,EAAe,EAAEI,MAAMF,MAAMG,KAAd,EAAf,CAAJ,EAA0CL,OAAOM,IAAP,CAAY,EAAEF,MAAMF,MAAMG,KAAd,EAAqBE,SAAS,EAA9B,EAAZ;AAC1C,MAAMC,aAAaR,OAAOS,SAAP,CAAiB;AAAA,UAASJ,MAAMD,IAAN,KAAeF,MAAMG,KAA9B;AAAA,GAAjB,CAAnB;AACA,MAAG,CAAC,iBAAEF,IAAF,CAAOH,OAAOQ,UAAP,EAAmBD,OAA1B,EAAmC,EAAEH,MAAMF,MAAMQ,MAAd,EAAnC,CAAJ,EAAgEV,OAAOQ,UAAP,EAAmBD,OAAnB,CAA2BD,IAA3B,CAAgC,EAAEF,MAAMF,MAAMQ,MAAd,EAAsBC,QAAQT,MAAMS,MAApC,EAA4CC,SAAS,EAArD,EAAhC;AAChE,MAAMC,cAAcb,OAAOQ,UAAP,EAAmBD,OAAnB,CAA2BE,SAA3B,CAAqC;AAAA,UAAUC,OAAON,IAAP,KAAgBF,MAAMQ,MAAtB,IAAgCA,OAAOC,MAAP,KAAkBT,MAAMS,MAAlE;AAAA,GAArC,CAApB;AACA,MAAGE,cAAc,CAAjB,EAAoB;AACnB,MAAG,CAAC,iBAAEV,IAAF,CAAOH,OAAOQ,UAAP,EAAmBD,OAAnB,CAA2BM,WAA3B,EAAwCD,OAA/C,EAAwD,EAAER,MAAMF,MAAMY,MAAd,EAAxD,CAAJ,EAAqFd,OAAOQ,UAAP,EAAmBD,OAAnB,CAA2BM,WAA3B,EAAwCD,OAAxC,CAAgDN,IAAhD,CAAqD,EAAEF,MAAMF,MAAMY,MAAd,EAArD;AAT1C;;AAAA;AAAA;AAAA;;AAAA;AAG7C,uBAAmBf,YAAnB,8HAAkC;AAAA,OAAxBG,KAAwB;;AAAA,oBAAxBA,KAAwB;;AAAA,4BAKb;AAEpB;AAV4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW7C,QAAOF,MAAP;AACA,CAZD;;AAcA,IAAMe,uBAAuB,SAAvBA,oBAAuB,CAACC,MAAD,EAASC,MAAT;AAAA,QAAoB,iBAAEC,OAAF,CAAUD,OAAOE,GAAP,CAAW,iBAAS;AAAEjB,QAAMc,MAAN,GAAeA,MAAf,CAAuB,IAAGd,MAAMkB,mBAAT,EAA8B,OAAO,iBAAEC,IAAF,CAAOnB,KAAP,EAAc,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,QAA9B,CAAd,CAAP,CAA+D,OAAO,IAAP;AAAc,EAAxJ,CAAV,CAApB;AAAA,CAA7B;;AAEA,IAAMoB;AAAA,oEAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAElB;AACAC,cAAQC,GAAR,CAAY,cAAZ;AAHkB;AAAA,aAIG,gBAAMC,IAAN,CAAW,EAAEC,UAAU,EAAEC,MAAM,uBAAR,EAAZ,EAAX,EAA4C,gCAA5C,CAJH;;AAAA;AAIZV,YAJY;AAKZW,oBALY,GAKKb,qBAAqB,UAArB,EAAiCE,MAAjC,CALL;AAMZY,kBANY,GAMGd,qBAAqB,aAArB,EAAoCE,MAApC,CANH;AAOZa,mBAPY,GAOIf,qBAAqB,QAArB,EAA+BE,MAA/B,CAPJ;AAAA;AAAA,aAQZ,gBAAMc,gBAAN,CAAuB,EAAE3B,MAAM,UAAR,EAAvB,EAA6C,EAAE4B,MAAM,EAAEhC,QAAQF,oBAAoB8B,cAApB,CAAV,EAAR,EAA7C,CARY;;AAAA;AAAA;AAAA,aASZ,gBAAMG,gBAAN,CAAuB,EAAE3B,MAAM,QAAR,EAAvB,EAA2C,EAAE4B,MAAM,EAAEhC,QAAQF,oBAAoB+B,YAApB,CAAV,EAAR,EAA3C,CATY;;AAAA;AAAA;AAAA,aAUZ,gBAAME,gBAAN,CAAuB,EAAE3B,MAAM,SAAR,EAAvB,EAA4C,EAAE4B,MAAM,EAAEhC,QAAQF,oBAAoBgC,aAApB,CAAV,EAAR,EAA5C,CAVY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,YAYZ,IAAIG,KAAJ,CAAUC,YAAY,IAAZ,cAAV,CAZY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;kBAeeZ,W","file":"index.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport Table from '../../models/Table';\nimport Event from '../../models/Event';\n\nconst generateTableSports = (actionEvents) => {\n\tlet sports = [];\n\tif(_.isEmpty(actionEvents)) return [];\n\tfor ( let event of actionEvents ) {\n\t\tif(!_.some(sports, { name: event.sport})) sports.push({ name: event.sport, leagues: [] });\n\t\tconst sportIndex = sports.findIndex(sport => sport.name === event.sport);\n\t\tif(!_.some(sports[sportIndex].leagues, { name: event.league })) sports[sportIndex].leagues.push({ name: event.league, region: event.region, periods: [] });\n\t\tconst leagueIndex = sports[sportIndex].leagues.findIndex(league => league.name === event.league && league.region === event.region);\n\t\tif(leagueIndex < 0) continue;\n \t\tif(!_.some(sports[sportIndex].leagues[leagueIndex].periods, { name: event.period })) sports[sportIndex].leagues[leagueIndex].periods.push({ name: event.period });\n\t}\n\treturn sports;\n};\n\nconst generateActionEvents = (action, events) => _.compact(events.map(event => { event.action = action; if(event.isActionOddActivate) return _.pick(event, ['sport', 'league', 'region', 'period']); return null; }));\n\nconst updateTable = async () => {\n\ttry {\n\t\t// eslint-disable-next-line\n\t\tconsole.log('update table');\n\t\tconst events = await Event.find({ cutOffAt: { $gte: moment() }}, 'sport period league region odd');\n\t\tconst standardEvents = generateActionEvents('straight', events);\n\t\tconst modifyEvents = generateActionEvents('superTeaser', events);\n\t\tconst specialEvents = generateActionEvents('parlay', events);\n\t\tawait Table.findOneAndUpdate({ name: 'standard' }, { $set: { sports: generateTableSports(standardEvents) } });\n\t\tawait Table.findOneAndUpdate({ name: 'modify' }, { $set: { sports: generateTableSports(modifyEvents) } });\n\t\tawait Table.findOneAndUpdate({ name: 'special' }, { $set: { sports: generateTableSports(specialEvents) } });\n\t} catch (e) {\n\t\tthrow new Error(__dirname + '\\n' + e);\n\t}\n};\nexport default updateTable;"]}