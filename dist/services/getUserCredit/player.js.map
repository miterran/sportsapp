{"version":3,"sources":["../../../src/services/getUserCredit/player.js"],"names":["getPlayerCurrentCredit","PlayerID","findOne","_id","Types","ObjectId","then","data","wagerLimit","initialCredit","find","Player","isClosed","updatedAt","$gte","startOf","$lte","endOf","orders","map","order","resultAmount","reduce","sum","amount","balance","createdAt","bet","atRisk","pending","initial","available","Error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA;AAAA,oEAAyB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGD,eAAOC,OAAP,CAAe,EAAEC,KAAK,mBAASC,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAP,EAAf,EAA2D,0BAA3D,EAAuFK,IAAvF,CAA4F;AAAA,cAAQC,KAAKC,UAAL,CAAgBC,aAAxB;AAAA,OAA5F,CAHC;;AAAA;AAGvBA,mBAHuB;AAAA;AAAA,aAIP,mBAASC,IAAT,CAAc,EAAEC,QAAQ,mBAASP,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAV,EAA6CW,UAAU,IAAvD,EAA6DC,WAAW,EAACC,MAAM,wBAASC,OAAT,CAAiB,SAAjB,CAAP,EAAoCC,MAAM,wBAASC,KAAT,CAAe,SAAf,CAA1C,EAAxE,EAAd,EAA+J,cAA/J,EACjBX,IADiB,CACZ;AAAA,cAAUY,OAAOC,GAAP,CAAW;AAAA,eAASC,MAAMC,YAAf;AAAA,QAAX,CAAV;AAAA,OADY,EACuCC,MADvC,CAC8C,UAACC,GAAD,EAAMC,MAAN;AAAA,cAAiBD,MAAMC,MAAvB;AAAA,OAD9C,EAC6E,CAD7E,CAJO;;AAAA;AAIvBC,aAJuB;AAAA;AAAA,aAMP,mBAASf,IAAT,CAAc,EAAEC,QAAQ,mBAASP,KAAT,CAAeC,QAAf,CAAwBJ,QAAxB,CAAV,EAA6CW,UAAU,KAAvD,EAA8Dc,WAAW,EAACZ,MAAM,wBAASC,OAAT,CAAiB,SAAjB,CAAP,EAAoCC,MAAM,wBAASC,KAAT,CAAe,SAAf,CAA1C,EAAzE,EAAd,EAAgK,YAAhK,EACjBX,IADiB,CACZ;AAAA,cAAUY,OAAOC,GAAP,CAAW;AAAA,eAASC,MAAMO,GAAN,CAAUC,MAAnB;AAAA,QAAX,CAAV;AAAA,OADY,EACqCN,MADrC,CAC4C,UAACC,GAAD,EAAMC,MAAN;AAAA,cAAiBD,MAAMC,MAAvB;AAAA,OAD5C,EAC2E,CAD3E,CANO;;AAAA;AAMvBK,aANuB;AAAA,uCAStB;AACNC,gBAASrB,aADH;AAENgB,gBAASA,OAFH;AAGNI,gBAASA,OAHH;AAINE,kBAAWtB,gBAAgBgB,OAAhB,GAA0BI;AAJ/B,OATsB;;AAAA;AAAA;AAAA;AAAA,YAiBvB,IAAIG,KAAJ,aAjBuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAzB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAsBehC,sB","file":"player.js","sourcesContent":["import mongoose from 'mongoose'\nimport config from '../../config';\nimport Player from '../../models/User.Player';\nimport BetOrder from '../../models/BetOrder';\nimport moment from 'moment'\n\nconst getPlayerCurrentCredit = async (PlayerID) => {\n\ttry {\n\n\t\tconst initialCredit = await Player.findOne({ _id: mongoose.Types.ObjectId(PlayerID) }, 'wagerLimit.initialCredit').then(data => data.wagerLimit.initialCredit)\n\t\tconst balance = await BetOrder.find({ Player: mongoose.Types.ObjectId(PlayerID), isClosed: true, updatedAt: {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek') } }, 'resultAmount')\n\t\t\t\t\t\t.then(orders => orders.map(order => order.resultAmount)).reduce((sum, amount) => sum + amount, 0)\n\t\tconst pending = await BetOrder.find({ Player: mongoose.Types.ObjectId(PlayerID), isClosed: false, createdAt: {$gte: moment().startOf('isoWeek'), $lte: moment().endOf('isoWeek') } }, 'bet.atRisk')\n\t\t\t\t\t\t.then(orders => orders.map(order => order.bet.atRisk)).reduce((sum, amount) => sum + amount, 0)\n\n\t\treturn { \n\t\t\tinitial: initialCredit,\n\t\t\tbalance: balance,\n\t\t\tpending: pending,\n\t\t\tavailable: initialCredit + balance - pending\n\t\t}\n\n\t}catch(e){\n\t\tthrow new Error(e)\n\t}\n\n}\n\nexport default getPlayerCurrentCredit"]}