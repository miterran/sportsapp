{"version":3,"sources":["../../../src/services/updateScores/pickMon.js"],"names":["pickMon","console","log","findOne","name","then","res","options","join","pickMonSport","find","status","populate","path","match","provider","cutOffAt","$lt","subtract","select","uniqBy","compact","picks","map","pick","Event","event","ID","pickMonEventIDs","isEmpty","get","pickMon_UID","pickMon_Key","data","pickMonXML","explicitArray","hasOwnProperty","lines","game","pickMonScores","pickMonEventID","eventScore","id","isFinished","homeScore","awayScore","void","line","score","winner","team2","team1","update","away","home","updatedAt","findOneAndUpdate","$set","new","updatedEvent","create","title","content","_id"],"mappings":"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","file":"pickMon.js","sourcesContent":["import config from '../../config';\nimport Event from '../../models/Event';\nimport _ from 'lodash';\nimport xml2js from'xml2js-es6-promise';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Provider from '../../models/Provider';\nimport SystemLog from '../../models/SystemLog';\nimport Pick from '../../models/Pick';\n\nconst pickMon = async () => {\n\t// eslint-disable-next-line\n\tconsole.log('update pick mon score');\n\ttry {\n\t\tconst pickMonSport = await Provider.findOne({ name: 'pm' }).then(res => res.options.join(','));\n\t\tconst pickMonEventIDs = await Pick.find({ status: 'Pending' }, 'Event')\n\t\t\t.populate({ path: 'Event', match: { provider: 'pm', status: 'Pending', cutOffAt: { $lt: moment().subtract(1, 'h') } }, select: 'ID' }) // $lt moment(), query started game , filter after 2 hr\n\t\t\t.then(picks => _.uniqBy(_.compact(picks.map(pick => pick.Event )), 'ID')).map(event => event.ID);\n\t\tif(_.isEmpty(pickMonEventIDs)) return;\n\t\tconst pickMonXML = await axios.get(`https://api.pickmonitor.com/lines.php?uid=${config.pickMon_UID}&key=${config.pickMon_Key}&sports=${pickMonSport}&graded=1&full_call=1`).then(res => res.data);\n\t\tconst pickMonScores = await xml2js(pickMonXML, {explicitArray: false}).then(res => (res.hasOwnProperty('lines') && res.lines.hasOwnProperty('game')) ? res.lines.game : [] );\n\t\tif(_.isEmpty(pickMonScores)) return;\n\t\tfor(let pickMonEventID of pickMonEventIDs){\n\t\t\tlet eventScore = _.find(pickMonScores, { id: pickMonEventID });\n\t\t\tif(_.isEmpty(eventScore)) continue;\n\t\t\tlet status = 'Review';\n\t\t\tlet isFinished = false;\n\t\t\tlet homeScore = null;\n\t\t\tlet awayScore = null;\n\t\t\tif(eventScore.void === '0' && !_.isEmpty(eventScore.line.score.winner)){\n\t\t\t\tstatus = 'Finished';\n\t\t\t\tisFinished = true;\n\t\t\t\thomeScore = eventScore.line.score.team2;\n\t\t\t\tawayScore = eventScore.line.score.team1;\n\t\t\t}\n\t\t\tlet update = {\n\t\t\t\tscore : {\n\t\t\t\t\taway: awayScore,\n\t\t\t\t\thome: homeScore\n\t\t\t\t},\n\t\t\t\tisFinished: isFinished,\n\t\t\t\tstatus: status,\n\t\t\t\tupdatedAt: moment()\n\t\t\t};\n\t\t\tconst updatedEvent = await Event.findOneAndUpdate({ ID: pickMonEventID, provider: 'pm', status: 'Pending' }, { $set: update }, { new: true });\n\n\t\t\tif(updatedEvent.status === 'Review'){\n\t\t\t\tawait SystemLog.create({ title: 'PickMon Event has Review', content: `${updatedEvent._id}`, status: 'danger'});\n\t\t\t}\n\t\t\t\n\t\t}\n\t} catch (e) {\n\t\tawait SystemLog.create({ title: 'update pick mon score Failed', content: e, status: 'danger'});\n\t}\n};\n\nexport default pickMon;"]}