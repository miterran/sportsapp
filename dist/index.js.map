{"version":3,"sources":["../src/index.js"],"names":["dirname","__dirname","connect","mongoURL","Promise","app","use","json","urlencoded","extended","static","join","get","req","res","userCounter","scheduleJob","UPDATE_ODD_MIN","console","log","length","deleteExpiredUnpickEvents","resetWeeklyBalanceToZero","schema","context","user","endpointURL","subscriptionsEndpoint","WSURL","ws","listen","port","execute","subscribe","onConnect","connectionParams","webSocket","includes","upgradeReq","headers","push","onDisconnect","filter","server","path"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill';\nimport config from './config';\nimport moment from 'moment';\nimport express from 'express';\nimport path from 'path';\nimport { createServer } from 'http';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport compress from 'compression';\nimport helmet from 'helmet';\nimport methodOverride from 'method-override';\n\nimport schedule from 'node-schedule';\n\nimport mongoose from 'mongoose';\nimport bluebird from 'bluebird';\n\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport { execute, subscribe } from 'graphql';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\nimport schema from './graphql/schema';\n\nimport addUserToReq from './middleware/addUserToReq';\n\nimport updateEvents from './queues/updateEvents';\n\nimport updateScoreFromPickMon from './services/updateScores/pickMon';\nimport updateScoreFromJsonOdd from './services/updateScores/jsonOdd';\nimport updatePicks from './services/updatePicks';\nimport updateBetOrders from './services/updateBetOrders';\nimport Event from './models/Event';\nimport Player from './models/User.Player';\n\nexport const dirname = __dirname;\nmongoose.connect(config.mongoURL);\nmongoose.Promise = bluebird;\n\nlet app = express();\n\napp.use(morgan('dev'));\napp.use(cors());\napp.use(helmet());\napp.use(compress());\napp.use(methodOverride());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/baseball')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/basketball')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/football')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/ncaa')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/hockey')));\napp.use('/images/teamlogos', express.static(path.join(__dirname, '/public/images/teamlogos/sport')));\napp.use('/images/background', express.static(path.join(__dirname, '/public/images/background')));\napp.use('/images/logo', express.static(path.join(__dirname, '/public/images/logo')));\napp.use('/images/sports', express.static(path.join(__dirname, '/public/images/sports')));\n\napp.get('/hi', async (req, res) => {\n\tres.json('hi')\n})\n\nlet userCounter = [];\n\nschedule.scheduleJob(`*/${config.UPDATE_ODD_MIN} * * * *`, async () => {\n\t// eslint-disable-next-line\n\tconsole.log('scheduleJob usercounter', moment(), 'online users ' + userCounter.length);\n\tif(userCounter.length > 0){\n\t\tawait updateEvents();\n\t}\n});\nschedule.scheduleJob('*/15 * * * *', async () => {\n\tawait updateScoreFromJsonOdd();\n\tawait updateScoreFromPickMon();\n\tawait updatePicks();\n\tawait updateBetOrders();\n\tawait Event.deleteExpiredUnpickEvents();\n\tawait Player.resetWeeklyBalanceToZero();\n});\n\napp.use(addUserToReq);\n\napp.use('/graphql', \n\tgraphqlExpress((req) => ({\n\t\tschema, \n\t\tcontext: { user: req.user }\n\t}))\n);\n\napp.use('/graphiql', graphiqlExpress({\n\tendpointURL: '/graphql', \n\tsubscriptionsEndpoint: config.WSURL\n}));\n\nconst ws = createServer(app);\n\nws.listen(config.port, () => { \n\tconsole.log(`Started on port ${config.port}`) \n\tnew SubscriptionServer({\n\t\texecute,\n\t\tsubscribe,\n\t\tschema,\n\t\tonConnect: async (connectionParams, webSocket) => {\n\t\t\tif(!userCounter.includes(webSocket.upgradeReq.headers['sec-websocket-key'])) {\n\t\t\t\tuserCounter.push(webSocket.upgradeReq.headers['sec-websocket-key']);\n\t\t\t}\n\t\t\t// eslint-disable-next-line\n\t\t\tconsole.log(userCounter.length);\n\t\t\tif(userCounter.length === 1){ \n\t\t\t\tawait updateEvents()\n\t\t\t}\n\t\t},\n\t\tonDisconnect: (webSocket) => {\n\t\t\tuserCounter = userCounter.filter(user => user !== webSocket.upgradeReq.headers['sec-websocket-key']);\n//\t\t\teslint-disable-next-line\n\t\t\tconsole.log(userCounter.length);\n\t\t},\n\t}, {\n\t\tserver: ws,\n\t\tpath: '/subscriptions',\n\t});\n});\n\n\nexport default app;"]}