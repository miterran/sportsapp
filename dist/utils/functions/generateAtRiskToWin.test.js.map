{"version":3,"sources":["../../../src/utils/functions/generateAtRiskToWin.test.js"],"names":["wagerPicks1","marked","oddLine","test","expect","toEqual","atRisk","toWin","wagerPicks2","wagerPicks3","wagerPicks4","wagerPicks12","wagerPicks13","wagerPicks5","wagerPicks11","wagerPicks10","wagerPicks6","wagerPicks7","wagerPicks8","wagerPicks9"],"mappings":"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","file":"generateAtRiskToWin.test.js","sourcesContent":["import generateAtRiskToWin from './generateAtRiskToWin';\n\n\nconst wagerPicks1 = [{marked: { oddLine: 100 }},];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('straight', 'wager', 100, wagerPicks1)).toEqual({atRisk: 100, toWin: 100});\n});\n\nconst wagerPicks2 = [{marked: { oddLine: -750 }},];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('straight', 'wager', 120, wagerPicks2)).toEqual({atRisk: 900, toWin: 120});\n});\n\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('straight', 'wager', 100, wagerPicks2)).toEqual({atRisk: 750, toWin: 100});\n});\n\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('straight', 'risk', 100, wagerPicks2)).toEqual({atRisk: 100, toWin: 13});\n});\n\nconst wagerPicks3 = [{marked: { oddLine: 525 }},];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('straight', 'wager', 130, wagerPicks3)).toEqual({atRisk: 130, toWin: 683});\n});\n\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('straight', 'risk', 130, wagerPicks3)).toEqual({atRisk: 130, toWin: 683});\n});\n\nconst wagerPicks4 = [{marked: { oddLine: 125 }},{marked: { oddLine: -105 }},{marked: { oddLine: -110 }},];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'wager', 100, wagerPicks4)).toEqual({atRisk: 100, toWin: 739});\n});\n\nconst wagerPicks12 = [{marked: { oddLine: 125 }},{marked: { oddLine: 125 }},{marked: { oddLine: 125 }},];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'wager', 100, wagerPicks12)).toEqual({atRisk: 100, toWin: 1039});\n});\n\nconst wagerPicks13 = [{marked: { oddLine: 100 }}, {marked: { oddLine: 100 }},];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'wager', 100, wagerPicks13)).toEqual({atRisk: 100, toWin: 300});\n});\n\nconst wagerPicks5 = [{marked: { oddLine: -1525 }},{marked: { oddLine: -675 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'risk', 100, wagerPicks5)).toEqual({atRisk: 100, toWin: 22});\n});\n\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'wager', 100, wagerPicks5)).toEqual({atRisk: 448, toWin: 100});\n});\n\nconst wagerPicks11 = [{marked: { oddLine: -1000 }},{marked: { oddLine: -1000 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'wager', 100, wagerPicks11)).toEqual({atRisk: 476, toWin: 100});\n});\n\nconst wagerPicks10 = [{marked: { oddLine: -1000 }},{marked: { oddLine: -1000 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('parlay', 'risk', 100, wagerPicks10)).toEqual({atRisk: 100, toWin: 21});\n});\n\nconst wagerPicks6 = [{marked: { oddLine: -100 }},{marked: { oddLine: -100 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('actionReverse', 'wager', 100, wagerPicks6)).toEqual({atRisk: 200, toWin: 400});\n});\n\nconst wagerPicks7 = [{marked: { oddLine: -100 }},{marked: { oddLine: -100 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('actionReverse', 'risk', 200, wagerPicks7)).toEqual({atRisk: 200, toWin: 400});\n});\n\nconst wagerPicks8 = [{marked: { oddLine: -700 }}, {marked: { oddLine: -700 }}, {marked: { oddLine: -700 }}, {marked: { oddLine: -700 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('actionReverse', 'risk', 1200, wagerPicks8)).toEqual({atRisk: 1200, toWin: 343});\n});\n\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('actionReverse', 'wager', 100, wagerPicks8)).toEqual({atRisk: 1200, toWin: 343});\n});\n\nconst wagerPicks9 = [{marked: { oddLine: 150 }}, {marked: { oddLine: 100 }}, {marked: { oddLine: 200 }}, {marked: { oddLine: 300 }}];\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('actionReverse', 'wager', 100, wagerPicks9)).toEqual({atRisk: 1200, toWin: 4500});\n});\n\ntest('test generateAtRiskToWin', () => {\n\texpect(generateAtRiskToWin('actionReverse', 'risk', 1200, wagerPicks9)).toEqual({atRisk: 1200, toWin: 4500});\n});"]}